- name: Download cloud image
  hosts: proxmox[0]
  gather_facts: true
  tasks:
    # This assumes that `proxmox_image_storage` is a shared drive (NFS, CephFS, etc) that all
    # nodes can access. If using a local drive, move these tasks down to the next section
    # that runs on all nodes.
    - name: Create images directory
      file:
        path: /mnt/pve/{{ proxmox_image_storage }}/template/iso/
        state: directory
        mode: '0755'
    
    - name: Download Ubuntu cloud image
      get_url:
        url: "{{ cloud_image_url }}"
        dest: /mnt/pve/{{ proxmox_image_storage }}/template/iso/{{ cloud_image_name }}
        force: no  # Don't redownload if exists

- name: Create VMs from cloud image
  hosts: proxmox
  gather_facts: true
  tasks:
    - name: Set fact for VMs on this host
      set_fact:
        vms_to_create: >
          {{
            groups['k3s_cluster']
            | map('extract', hostvars)
            | selectattr('proxmox_host', 'eq', inventory_hostname)
            | list
          }}

    - name: Create VM
      loop: "{{ vms_to_create }}"
      loop_control:
        loop_var: vm_config
        label: "Creating {{ vm_config.inventory_hostname }}"
      include_tasks: tasks/create-vm.yaml
    
# Variables must be loaded now rather than as part of group_vars since they depend
# on the results of the previous tasks (VM creation in particular)
- name: Include k3s variables
  hosts: k3s_cluster
  gather_facts: true
  tasks:
    - include_vars: vars/k3s.yaml
    
- name: Prepare k3s nodes
  hosts: k3s_cluster
  gather_facts: true
  roles:
    - role: techno_tim.k3s_ansible.prereq
      become: true
    # Download k3s binary
    - role: techno_tim.k3s_ansible.download
      become: true
    - role: system_requirements
      become: true

- name: Setup k3s servers
  hosts: k3s_servers
  roles:
    - role: techno_tim.k3s_ansible.k3s_server
      become: true

- name: Setup k3s agents
  hosts: k3s_agents
  roles:
    - role: techno_tim.k3s_ansible.k3s_agent
      become: true

- name: Configure k3s cluster
  hosts: k3s_servers
  roles:
    - role: techno_tim.k3s_ansible.k3s_server_post
      become: true

- name: Reboot k3s cluster nodes
  hosts: k3s_cluster
  gather_facts: false
  tasks:
    - name: Rebooting {{ inventory_hostname }}
      ansible.builtin.reboot:
        reboot_timeout: 600
        msg: "Reboot initiated by Ansible for k3s cluster"

- name: Storing kubeconfig in the playbook directory
  hosts: k3s_servers[0]
  tasks:
    - name: Copying kubeconfig from {{ inventory_hostname }}
      ansible.builtin.fetch:
        src: "{{ ansible_user_dir }}/.kube/config"
        dest: "./kubeconfig"
        flat: true
