apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  namespace: media
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
spec:
  strategy:
    # Recreate strategy required due to limited resources
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: jellyfin
    spec:
      serviceAccountName: jellyfin
      containers:
        - name: jellyfin
          image: ghcr.io/linuxserver/jellyfin:2021.12.16
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              gpu.intel.com/i915: "1"
              cpu: "2000m"
              memory: "4Gi"
            limits:
              gpu.intel.com/i915: "1"
              cpu: "6000m"
              memory: "6Gi"
          ports:
            - name: http
              containerPort: 8096
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: jellyfin-config
            - mountPath: /config/cache/transcodes
              name: jellyfin-transcode
            - mountPath: /data/media
              name: jellyfin-media
          env:
            - name: PUID
              value: ${quote}${NFS_UID}${quote}
            - name: PGID
              value: ${quote}${NFS_GID}${quote}
            - name: TZ
              value: "America/Toronto"
            - name: UMASK
              value: "022"
            - name: DOCKER_MODS
              value: "linuxserver/mods:jellyfin-opencl-intel"
          livenessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http

      volumes:
        # Config volume is a PVC, replicated with Longhorn
        - name: jellyfin-config
          persistentVolumeClaim:
            claimName: jellyfin-config
        # Media volume is an NFS share
        - name: jellyfin-media
          nfs:
            server: ds920.hoyes.dev
            path: /volume1/media
        # Transcode volume is an emptyDir. Could make in-memory if desired.
        - name: jellyfin-transcode
          emptyDir: {}

      nodeSelector:
        gpu.hoyes.dev/type: "UHD_730"
        # Technically redundant with the above, but makes sure that the deployment fails
        # if something is wrong with the intel device plugins
        intel.feature.node.kubernetes.io/gpu: "true"
